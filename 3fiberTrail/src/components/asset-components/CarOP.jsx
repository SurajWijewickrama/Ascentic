/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 car.glb
*/

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import React from "react";
import socket from "../../sockets/sockets";
import useKeyboard from "../../useKeyboard";

const speed = 2;
export function CarOP(props) {
  const keyMap = useKeyboard();

  socket.emit("colorUpdated", props.carColor);

  useFrame((_, delta) => {
    // keyMap["KeyE"] && (car.current.rotation.x -= speed * delta);
    // keyMap["KeyQ"] && (car.current.rotation.x += speed * delta);
    //keyMap["KeyD"] && (car.current.rotation.y -= rSpeed * delta);
    keyMap["KeyA"] && socket.emit("keyDown", "KeyA");
    keyMap["KeyD"] && socket.emit("keyDown", "KeyD");
    keyMap["KeyW"] && socket.emit("keyDown", "KeyW");
    keyMap["KeyS"] && socket.emit("keyDown", "KeyS");
    // keyMap["KeyS"] &&
    //   (car.current.position.z -=
    //     Math.cos(car.current.rotation.y) * speed * delta) &&
    //   (car.current.position.x -=
    //     Math.sin(car.current.rotation.y) * speed * delta);
  });

  return <></>;
}

useGLTF.preload("/models/car.glb");
